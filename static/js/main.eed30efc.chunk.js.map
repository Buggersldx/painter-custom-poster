{"version":3,"sources":["serviceWorker.js","optionArr.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","optionArr","type","css","width","height","backgroundColor","name","text","lineHeight","color","top","left","background","fontSize","fontWeight","maxLines","textStyle","textAlign","textDecoration","borderRadius","borderWidth","borderColor","padding","rotate","shadow","fontFamily","url","mode","json","require","Option","Select","fabric","message","config","maxCount","QRErrorCorrectLevel","_config","canvasState","currentStateIndex","undoStatus","redoStatus","undoFinishedStatus","redoFinishedStatus","newOptionArr","_","cloneDeep","App","keydown","ALL_KEYS","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showDrawer","setState","visible","onClose","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","addShape","bind","assertThisInitialized","generateCode","copyCode","viewCode","handerUndo","handerRedo","handerEditObject","state","redoButtonStatus","undoButtonStatus","activeObjectOptions","currentOptionArr","views","canvas_sprite","shapes","rect","image","qrcode","activeObject","Canvas","that","on","obj","target","currentHeight","canvas","currentWidth","setCoords","getBoundingRect","Math","max","min","options","set","radius","updateCanvasState","event","which","remove","renderAll","index","addTextObject","Shape","addRectObject","addImageObject","addQrcodeObject","setActiveObject","push","add","fill","objectSpread","stroke","textBox","Textbox","textLines","length","element","Rect","rx","strokeWidth","angle","selectable","Group","mytype","w","scaleX","h","scaleY","originX","loadImageUrl","imgWidth","imgHeight","ry","oldScaleX","oldScaleY","clipPath","originY","imgBase64","jrQrcode","getQrBase64","correctLevel","reverse","foreground","lockUniScaling","imgUrl","Promise","resolve","Image","fromURL","oImg","rects","forEach","item","i","texts","_this2","keys","item2","view","concat","content","_objects","ele","finallObj","miniCode","plain","replace","copy","success","error","visibleCode","jsonData","toJSON","canvasAsJson","JSON","stringify","indexToBeInserted","numberOfElementsToRetain","splice","loadFromJSON","clear","getActiveObject","_this3","_react_16_9_0_react_default","a","createElement","id","className","es_button","onClick","map","key","i2","isArray","input","defaultValue","onChange","value","es_select","style","item3","i3","modal","title","onCancel","footer","react_markdown_default","source","React","Component","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eed30efc.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default [\r\n  {\r\n    type: 'canvas',\r\n    css: {\r\n      width: '654',\r\n      height: '1000',\r\n      backgroundColor: '#f8f8f8'\r\n    }\r\n  },\r\n  {\r\n    type: 'text',\r\n    name: '文字',\r\n    css: {\r\n      text: ' 我是来测试的,请你不要打死我',\r\n      width: 200,\r\n      lineHeight: 1.5,\r\n      color: 'red',\r\n      top: 0,\r\n      left: 100,\r\n      background: 'rgba(0,0,0,0)',\r\n      fontSize: 30,\r\n      fontWeight: ['normal', 'bold'], //文字加粗 可以不写\r\n      maxLines: 2, //最大行数\r\n      textStyle: ['fill', 'stroke'], //fill： 填充样式，stroke：镂空样式\r\n      textAlign: ['left', 'center', 'right'], //文字的对齐方式，分为 left, center, right\r\n      textDecoration: ['none', 'overline', 'underline', 'linethrough'], //overline underline line-through 可组合\r\n      borderRadius: 1,\r\n      borderWidth: 1,\r\n      borderColor: '#000000',\r\n      padding: 0,\r\n      rotate: 0,\r\n      shadow: '10 10 5 #888888',\r\n      fontFamily: ''\r\n    }\r\n  },\r\n  {\r\n    type: 'rect',\r\n    name: '矩形',\r\n    css: {\r\n      background: '#ffffff', //文字区域背景色\r\n      top: 300,\r\n      left: 100,\r\n      width: 500,\r\n      height: 100, //高度,没有的话就自适应\r\n      rotate: 0,\r\n      borderRadius: 50,\r\n      borderWidth: 2,\r\n      borderColor: '#000000',\r\n      //align: ['center', 'left', 'right'], //view 的对齐方式\r\n      shadow: '10 10 5 #888888' //阴影\r\n    }\r\n  },\r\n  {\r\n    type: 'image',\r\n    name: '图片',\r\n    css: {\r\n      url: 'https://operate.maiyariji.com/20190709%2F3da002983292a6950a71ca7392a21827.jpg',\r\n      mode: ['scaleToFill', 'aspectFill', 'auto'],\r\n      top: 100,\r\n      left: 100,\r\n      width: 100,\r\n      height: 100, //高度,没有的话就自适应\r\n      rotate: 0,\r\n      borderRadius: 50,\r\n      borderWidth: 2,\r\n      borderColor: '#000000',\r\n      shadow: ''\r\n    }\r\n  },\r\n  {\r\n    type: 'qrcode',\r\n    name: '二维码',\r\n    css: {\r\n      url: '哈哈哈',\r\n      color: '#000000', //字体颜色 linear-gradient(-135deg, #fedcba 0%, rgba(18, 52, 86, 1) 20%, #987 80%)\r\n      background: '#ffffff', //文字区域背景色\r\n      top: 100,\r\n      left: 100,\r\n      width: 200,\r\n      rotate: 0\r\n      // borderRadius: 10,\r\n      // borderWidth: 2,\r\n      // borderColor: '#000000',\r\n      //align: ['center', 'left', 'right'], //view 的对齐方式\r\n      //padding: '3'\r\n    }\r\n  }\r\n];\r\n","import React from 'react';\r\nimport fabric from 'fabric';\r\nimport _ from 'lodash';\r\nimport jrQrcode from 'jr-qrcode';\r\nimport optionArr from './optionArr';\r\nimport './App.scss';\r\nimport { Button, Input, message, Select, Modal /* , Icon, Drawer  */ } from 'antd';\r\nimport copy from 'copy-to-clipboard';\r\nimport keydown, { ALL_KEYS } from 'react-keydown';\r\nimport ReactMarkdown from 'react-markdown';\r\nvar json = require('format-json');\r\n\r\nconst { Option } = Select;\r\nfabric = fabric.fabric;\r\nmessage.config({\r\n  maxCount: 1\r\n});\r\nlet QRErrorCorrectLevel = {\r\n  L: 1,\r\n  M: 0,\r\n  Q: 3,\r\n  H: 2\r\n};\r\nlet _config = {\r\n  canvasState: [],\r\n  currentStateIndex: -1,\r\n  undoStatus: false,\r\n  redoStatus: false,\r\n  undoFinishedStatus: 1,\r\n  redoFinishedStatus: 1\r\n};\r\n//得到当前默认信息\r\nlet newOptionArr = _.cloneDeep(optionArr);\r\nnewOptionArr[1].css.textStyle = newOptionArr[1].css.textStyle[0];\r\nnewOptionArr[1].css.textAlign = newOptionArr[1].css.textAlign[0];\r\nnewOptionArr[1].css.fontWeight = newOptionArr[1].css.fontWeight[0];\r\nnewOptionArr[1].css.textDecoration = newOptionArr[1].css.textDecoration[0];\r\n//newOptionArr[1].css.hasBorder = newOptionArr[1].css.hasBorder[0];\r\nnewOptionArr[3].css.mode = newOptionArr[3].css.mode[0];\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.addShape = this.addShape.bind(this);\r\n    this.generateCode = this.generateCode.bind(this);\r\n    this.copyCode = this.copyCode.bind(this);\r\n    this.viewCode = this.viewCode.bind(this);\r\n    this.handerUndo = this.handerUndo.bind(this);\r\n    this.handerRedo = this.handerRedo.bind(this);\r\n    this.handerEditObject = this.handerEditObject.bind(this);\r\n    this.state = {\r\n      redoButtonStatus: '',\r\n      undoButtonStatus: '',\r\n      activeObjectOptions: {} //当前编辑对象的配置\r\n    };\r\n    this.currentOptionArr = newOptionArr; //当前图像数据集合\r\n    this.views = []; //所有元素的信息\r\n    this.canvas_sprite = ''; //渲图片的canvas对象\r\n    this.shapes = {\r\n      text: [],\r\n      rect: [],\r\n      image: [],\r\n      qrcode: []\r\n    };\r\n    this.height = 300; //固定死\r\n    this.width = 0; //通过实际宽高比计算出来的\r\n    this.activeObject = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.canvas_sprite = new fabric.Canvas('merge', this.currentOptionArr[0].css);\r\n    let that = this;\r\n    this.canvas_sprite.on('object:moving', function(e) {\r\n      var obj = e.target;\r\n      // if object is too big ignore\r\n      if (obj.currentHeight > obj.canvas.height || obj.currentWidth > obj.canvas.width) {\r\n        return;\r\n      }\r\n      obj.setCoords();\r\n      // top-left  corner\r\n      if (obj.getBoundingRect().top < 0 || obj.getBoundingRect().left < 0) {\r\n        obj.top = Math.max(obj.top, obj.top - obj.getBoundingRect().top);\r\n        obj.left = Math.max(obj.left, obj.left - obj.getBoundingRect().left);\r\n      }\r\n      // bot-right corner\r\n      if (\r\n        obj.getBoundingRect().top + obj.getBoundingRect().height > obj.canvas.height ||\r\n        obj.getBoundingRect().left + obj.getBoundingRect().width > obj.canvas.width\r\n      ) {\r\n        obj.top = Math.min(\r\n          obj.top,\r\n          obj.canvas.height - obj.getBoundingRect().height + obj.top - obj.getBoundingRect().top\r\n        );\r\n        obj.left = Math.min(\r\n          obj.left,\r\n          obj.canvas.width - obj.getBoundingRect().width + obj.left - obj.getBoundingRect().left\r\n        );\r\n      }\r\n      /* let { top, left, width, height } = e.target;\r\n      let { optionArr } = that.state;\r\n      let optionArrIndex = optionArr.findIndex(function(item) {\r\n        return item.text === e.target.text;\r\n      });\r\n      let optionArrNew = JSON.parse(JSON.stringify(optionArr));\r\n      for (let index = 0; index < optionArrIndex; index++) {\r\n        left -= optionArrNew[index].frames * that.width;\r\n      }\r\n      optionArrNew[optionArrIndex] = {\r\n        ...optionArrNew[optionArrIndex],\r\n        textWidth: width,\r\n        textHeight: height,\r\n        left,\r\n        top\r\n      };\r\n      that.setState({\r\n        optionArr: optionArrNew\r\n      }); */\r\n    });\r\n    this.canvas_sprite.on('mouse:down', function(options) {\r\n      if (options.target) {\r\n        that.activeObject = options.target;\r\n        console.log('有对象被点击咯! ', options.target.type);\r\n        //that.showDrawer()\r\n        that.activeObject.set({\r\n          radius: 150\r\n        });\r\n      }\r\n    });\r\n    this.canvas_sprite.on('object:modified', function() {\r\n      that.updateCanvasState();\r\n    });\r\n\r\n    this.canvas_sprite.on('object:added', function() {\r\n      that.updateCanvasState();\r\n    });\r\n    this.addShape(1);\r\n    this.addShape(2);\r\n    this.addShape(3);\r\n    /* let canvas = this.canvas_sprite;\r\n    canvas.add(new fabric.Circle({ radius: 30, fill: '#f55', top: 100, left: 100 })); */\r\n  }\r\n  @keydown(ALL_KEYS)\r\n  beginEdit(event) {\r\n    let that = this;\r\n    if (that.activeObject) {\r\n      //console.log('that.activeObject', that.activeObject);\r\n      if (event.which === 37) {\r\n        //左\r\n        event.preventDefault();\r\n        that.activeObject.set({\r\n          left: that.activeObject.left - 1\r\n        });\r\n      } else if (event.which === 39) {\r\n        //右\r\n        event.preventDefault();\r\n        that.activeObject.set({\r\n          left: that.activeObject.left + 1\r\n        });\r\n      } else if (event.which === 40) {\r\n        //上\r\n        event.preventDefault();\r\n        that.activeObject.set({\r\n          top: that.activeObject.top + 1\r\n        });\r\n      } else if (event.which === 38) {\r\n        //下\r\n        event.preventDefault();\r\n        that.activeObject.set({\r\n          top: that.activeObject.top - 1\r\n        });\r\n      } else if (event.which === 90) {\r\n        //ctrl+z\r\n        event.preventDefault();\r\n        that.handerUndo();\r\n      } else if (event.which === 89) {\r\n        //ctrl+y\r\n        event.preventDefault();\r\n        that.handerRedo();\r\n      } else if (event.which === 46) {\r\n        //delete\r\n        event.preventDefault();\r\n        this.canvas_sprite.remove(that.activeObject);\r\n      }\r\n      this.canvas_sprite.renderAll();\r\n    }\r\n    //console.log('event', event.which);\r\n    // Start editing\r\n  }\r\n  async addShape(index) {\r\n    const currentOptionArr = this.currentOptionArr;\r\n    let { type } = currentOptionArr[index];\r\n    let Shape;\r\n    switch (type) {\r\n      case 'text':\r\n        Shape = await this.addTextObject(index);\r\n        break;\r\n      case 'rect':\r\n        Shape = await this.addRectObject(index);\r\n        break;\r\n      case 'image':\r\n        Shape = await this.addImageObject(index);\r\n        break;\r\n      case 'qrcode':\r\n        Shape = await this.addQrcodeObject(index);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.canvas_sprite.setActiveObject(Shape);\r\n    this.shapes[type].push(Shape);\r\n    this.canvas_sprite.add(Shape);\r\n  }\r\n  async addTextObject(index) {\r\n    const that = this;\r\n    const currentOptionArr = this.currentOptionArr;\r\n    let { css } = currentOptionArr[index];\r\n    let {\r\n      width,\r\n      //height,\r\n      text,\r\n      color,\r\n      fontSize,\r\n      left,\r\n      top,\r\n      fontWeight,\r\n      fontFamily,\r\n      padding,\r\n      textDecoration,\r\n      borderRadius,\r\n      borderWidth,\r\n      borderColor,\r\n      rotate,\r\n      //align,\r\n      shadow,\r\n      lineHeight,\r\n      textAlign,\r\n      maxLines,\r\n      textStyle,\r\n      background\r\n    } = css;\r\n    width = width / 1;\r\n    left = left / 1;\r\n    top = top / 1;\r\n    borderRadius = borderRadius / 1;\r\n    borderWidth = borderWidth / 1;\r\n    rotate = rotate / 1;\r\n    fontSize = fontSize / 1;\r\n    maxLines = maxLines / 1;\r\n    padding = padding / 1;\r\n    lineHeight = lineHeight / 1.08; //和painter调试得出的值\r\n    let Shape;\r\n    let config = {\r\n      width: width / 1,\r\n      //height: height / 1,\r\n      fill: color,\r\n      fontWeight,\r\n      left: left, //距离画布左侧的距离，单位是像素\r\n      top /* : top + ((lineHeight - 1) * fontSize) / 2 */, //距离画布上边的距离\r\n      fontSize: fontSize / 1, //文字大小\r\n      fontFamily,\r\n      padding: padding / 1,\r\n      [textDecoration]: true,\r\n      //lockUniScaling: true, //只能等比缩放\r\n      textAlign,\r\n      textStyle,\r\n      shadow,\r\n      angle: rotate / 1,\r\n      splitByGrapheme: true, //文字换行\r\n      zIndex: 2,\r\n      lineHeight,\r\n      editable: true,\r\n      maxLines: maxLines / 1,\r\n      textDecoration: textDecoration,\r\n      lockScalingY: true,\r\n      mytype: 'textbox'\r\n    };\r\n    if (textStyle === 'stroke') {\r\n      config = {\r\n        ...config,\r\n        stroke: color,\r\n        fill: 'rgba(0,0,0)'\r\n      };\r\n    }\r\n    let textBox = new fabric.Textbox(text, config);\r\n    if (textBox.textLines.length > maxLines) {\r\n      let text = '';\r\n      for (let index = 0; index < maxLines; index++) {\r\n        const element = textBox.textLines[index];\r\n        if (index === maxLines - 1) {\r\n          text = text + element + '..';\r\n        } else {\r\n          text += element;\r\n        }\r\n      }\r\n      textBox.set({\r\n        text\r\n      });\r\n    }\r\n    if (borderWidth || background) {\r\n      let height = textBox.height / 1 + (textBox.lineHeight / 1 - 1) * textBox.fontSize + padding * 2;\r\n      let width = textBox.width + padding * 2;\r\n      let left = textBox.left - padding;\r\n      let top = css.top - padding;\r\n      let Rect = new fabric.Rect({\r\n        width,\r\n        height,\r\n        left, //距离画布左侧的距离，单位是像素\r\n        top,\r\n        padding: padding / 1,\r\n        rx: borderRadius / 1,\r\n        //ry:borderRadius,\r\n        strokeWidth: borderWidth / 1,\r\n        stroke: borderColor,\r\n        fill: background,\r\n        angle: rotate,\r\n        shadow,\r\n        backgroundColor: background,\r\n        selectable: false\r\n      });\r\n      Shape = new fabric.Group([Rect, textBox], {\r\n        width,\r\n        height,\r\n        left, //距离画布左侧的距离，单位是像素\r\n        top,\r\n        angle: rotate,\r\n        mytype: 'textGroup'\r\n      });\r\n      Shape.on('scaling', function(e) {\r\n        let obj = this;\r\n        let width = obj.width;\r\n        let height = obj.height;\r\n        let w = obj.width * obj.scaleX;\r\n        let h = obj.height * obj.scaleY;\r\n        Rect.set({\r\n          left: -(w - width / 2),\r\n          top: -(h - height / 2),\r\n          height: h,\r\n          width: w,\r\n          rx: borderRadius,\r\n          strokeWidth: borderWidth\r\n        });\r\n        textBox.set({\r\n          left: -(w - width / 2),\r\n          top: -(h - height / 2),\r\n          width,\r\n          height,\r\n          fontSize,\r\n          scaleX: 1,\r\n          scaleY: 1\r\n        });\r\n        obj.set({\r\n          height: h,\r\n          width: w,\r\n          scaleX: 1,\r\n          scaleY: 1,\r\n          originX: 'left'\r\n        });\r\n\r\n        that.canvas_sprite.renderAll();\r\n      });\r\n    } else {\r\n      Shape = textBox;\r\n    }\r\n    return Shape;\r\n  }\r\n  async addRectObject(index) {\r\n    const currentOptionArr = this.currentOptionArr;\r\n    let { css } = currentOptionArr[index];\r\n    let {\r\n      width,\r\n      height,\r\n      left,\r\n      top,\r\n      borderRadius,\r\n      borderWidth,\r\n      borderColor,\r\n      background,\r\n      rotate,\r\n      //align,\r\n      shadow\r\n    } = css;\r\n    width = width / 1;\r\n    height = height / 1;\r\n    left = left / 1;\r\n    top = top / 1;\r\n    borderRadius = borderRadius / 1;\r\n    borderWidth = borderWidth / 1;\r\n    rotate = rotate / 1;\r\n    let Shape = new fabric.Rect({\r\n      width,\r\n      height,\r\n      left,\r\n      top,\r\n      rx: borderRadius,\r\n      //ry:borderRadius,\r\n      strokeWidth: borderWidth,\r\n      stroke: borderColor,\r\n      fill: background,\r\n      //align,\r\n      rotate,\r\n      shadow,\r\n      mytype: 'rect'\r\n    });\r\n    return Shape;\r\n  }\r\n  async addImageObject(index) {\r\n    const currentOptionArr = this.currentOptionArr;\r\n    let { css } = currentOptionArr[index];\r\n    let {\r\n      width,\r\n      height,\r\n      left,\r\n      top,\r\n      borderRadius,\r\n      borderWidth,\r\n      borderColor,\r\n      background,\r\n      rotate,\r\n      //align,\r\n      shadow,\r\n      mode,\r\n      url\r\n    } = css;\r\n    width = width / 1;\r\n    height = height / 1;\r\n    left = left / 1;\r\n    top = top / 1;\r\n    borderRadius = borderRadius / 1;\r\n    borderWidth = borderWidth / 1;\r\n    rotate = rotate / 1;\r\n\r\n    let Shape = await this.loadImageUrl(url);\r\n    let imgWidth = Shape.width;\r\n    let imgHeight = Shape.height;\r\n\r\n    Shape.set({\r\n      url,\r\n      left: left / 1,\r\n      top: top / 1,\r\n      rx: borderRadius / 1,\r\n      ry: borderRadius / 1,\r\n      strokeWidth: borderWidth / 1,\r\n      stroke: borderColor,\r\n      backgroundColor: background,\r\n      //align,\r\n      angle: rotate / 1,\r\n      mode,\r\n      shadow,\r\n      mytype: 'image'\r\n    });\r\n\r\n    if (mode === 'scaleToFill') {\r\n      Shape.set({\r\n        width: imgWidth,\r\n        height: imgHeight,\r\n        scaleX: width / imgWidth,\r\n        scaleY: height / imgHeight,\r\n        oldScaleX: width / imgWidth,\r\n        oldScaleY: height / imgHeight\r\n      });\r\n      Shape.clipPath = new fabric.Rect({\r\n        width,\r\n        height,\r\n        originX: 'center',\r\n        originY: 'center',\r\n        rx: borderRadius,\r\n        angle: rotate / 1,\r\n        scaleX: imgWidth / width,\r\n        scaleY: imgHeight / height\r\n      });\r\n    } else if (mode === 'auto') {\r\n      //忽略高度会自适应宽度,等比缩放图片\r\n      Shape.set({\r\n        width: imgWidth,\r\n        height: imgHeight,\r\n        scaleX: width / imgWidth,\r\n        scaleY: width / imgWidth,\r\n        oldScaleX: width / imgWidth,\r\n        oldScaleY: height / imgHeight\r\n      });\r\n      Shape.clipPath = new fabric.Rect({\r\n        width,\r\n        height,\r\n        originX: 'center',\r\n        originY: 'center',\r\n        rx: borderRadius,\r\n        angle: rotate / 1,\r\n        scaleX: imgWidth / width,\r\n        scaleY: imgHeight / height\r\n      });\r\n    } else if (mode === 'aspectFill') {\r\n      Shape.clipPath = new fabric.Rect({\r\n        width: width / 1,\r\n        height: height / 1,\r\n        originX: 'center',\r\n        originY: 'center',\r\n        rx: borderRadius / 1,\r\n        angle: rotate / 1\r\n      });\r\n      Shape.set({\r\n        width,\r\n        height\r\n      });\r\n    }\r\n\r\n    return Shape;\r\n  }\r\n  async addQrcodeObject(index) {\r\n    const currentOptionArr = this.currentOptionArr;\r\n    let { css } = currentOptionArr[index];\r\n    let {\r\n      width,\r\n      left,\r\n      top,\r\n      color,\r\n      /* borderRadius,\r\n      borderWidth,\r\n      borderColor, */\r\n      background,\r\n      rotate,\r\n      url\r\n      //align,\r\n    } = css;\r\n    width = width / 1;\r\n    left = left / 1;\r\n    top = top / 1;\r\n    rotate = rotate / 1;\r\n    let imgBase64 = jrQrcode.getQrBase64(url, {\r\n      padding: 0, // 二维码四边空白（默认为10px）\r\n      width: width / 1, // 二维码图片宽度（默认为256px）\r\n      height: width / 1, // 二维码图片高度（默认为256px）\r\n      correctLevel: QRErrorCorrectLevel.H, // 二维码容错level（默认为高）\r\n      reverse: false, // 反色二维码，二维码颜色为上层容器的背景颜色\r\n      background: background, // 二维码背景颜色（默认白色）\r\n      foreground: color // 二维码颜色（默认黑色）\r\n    });\r\n    let Shape = await this.loadImageUrl(imgBase64);\r\n    Shape.set({\r\n      url,\r\n      width: width / 1,\r\n      height: width / 1,\r\n      left: left / 1,\r\n      top: top / 1,\r\n      /* rx: borderRadius / 1,\r\n      strokeWidth: borderWidth / 1,\r\n      stroke: borderColor, */\r\n      //align,\r\n      angle: rotate / 1,\r\n      lockUniScaling: true, //只能等比缩放\r\n      mytype: 'qrcode'\r\n    });\r\n\r\n    return Shape;\r\n  }\r\n  loadImageUrl(imgUrl) {\r\n    return new Promise(resolve => {\r\n      fabric.Image.fromURL(imgUrl, function(oImg) {\r\n        //console.log('Shape', oImg);\r\n        resolve(oImg);\r\n      });\r\n    });\r\n  }\r\n  clearCanvas() {\r\n    this.rects.forEach(function(item, i) {\r\n      item.remove();\r\n    });\r\n    this.texts.forEach(function(item, i) {\r\n      item.remove();\r\n    });\r\n  }\r\n  generateCode() {\r\n    let shapes = this.shapes;\r\n    let canvas_sprite = this.canvas_sprite;\r\n    this.views = [];\r\n    Object.keys(shapes).forEach(item => {\r\n      shapes[item].forEach((item2, index) => {\r\n        let view = {};\r\n        //let oldScaleX = item2.oldScaleX || 1;\r\n        let oldScaleY = item2.oldScaleY || 1;\r\n        let css = {\r\n          color: `${item2.color}`,\r\n          background: `${item2.fill}`,\r\n          width: `${item2.width * item2.scaleX}px`,\r\n          height: `${item2.height * item2.scaleY}px`,\r\n          top: `${item2.top}px`,\r\n          left: `${item2.left}px`,\r\n          rotate: `${item2.angle}`,\r\n          borderRadius: `${item2.rx * (item2.scaleY / oldScaleY)}px`,\r\n          borderWidth: `${item2.strokeWidth}px`,\r\n          borderColor: `${item2.stroke}`,\r\n          //align: `${item2.align}`,\r\n          shadow: `${item2.shadow}`\r\n        };\r\n        //console.log('canvas_sprite.toObject(item2)', canvas_sprite.toObject(item2));\r\n\r\n        let type = item2.mytype;\r\n        if (type === 'image') {\r\n          delete css.color;\r\n          delete css.background;\r\n          view = {\r\n            type,\r\n            url: `${item2.url}`,\r\n            css: {\r\n              ...css,\r\n              mode: `${item2.mode}`\r\n            }\r\n          };\r\n        } else if (type === 'qrcode') {\r\n          delete css.color;\r\n          delete css.background;\r\n          delete css.borderRadius;\r\n          delete css.borderWidth;\r\n          delete css.borderColor;\r\n          delete css.shadow;\r\n          view = {\r\n            type,\r\n            content: `${item2.url}`,\r\n            css: {\r\n              ...css /* ,\r\n              padding: `${item2.padding}rpx` */\r\n            }\r\n          };\r\n        } else if (type === 'textbox') {\r\n          delete css.borderRadius;\r\n          delete css.borderWidth;\r\n          delete css.borderColor;\r\n          view = {\r\n            type: 'text',\r\n            text: `${item2.text}`,\r\n            css: {\r\n              ...css,\r\n              color: item2.fill,\r\n              padding: `${item2.padding}px`,\r\n              fontSize: `${item2.fontSize}px`,\r\n              fontWeight: `${item2.fontWeight}`,\r\n              maxLines: `${item2.maxLines}`,\r\n              lineHeight: `${(item2.lineHeight / 1) * item2.fontSize}px`,\r\n              textStyle: `${item2.textStyle}`,\r\n              textDecoration: `${item2.textDecoration}`,\r\n              fontFamily: `${item2.fontFamily}`,\r\n              textAlign: `${item2.textAlign}`\r\n            }\r\n          };\r\n        } else if (type === 'textGroup') {\r\n          item2._objects.forEach(ele => {\r\n            if (ele.type === 'rect') {\r\n              view = {\r\n                ...view,\r\n                type: 'text',\r\n                css: {\r\n                  ...css,\r\n                  ...view.css,\r\n                  left: `${item2.left + ele.padding}px`,\r\n                  top: `${item2.top + ele.padding + ele.strokeWidth}px`,\r\n                  background: `${ele.backgroundColor}`,\r\n                  borderRadius: `${ele.rx}px`,\r\n                  borderWidth: `${ele.strokeWidth}px`,\r\n                  borderColor: `${ele.stroke}`\r\n                }\r\n              };\r\n            } else {\r\n              view = {\r\n                ...view,\r\n                type: 'text',\r\n                text: `${ele.text}`,\r\n                css: {\r\n                  ...css,\r\n                  ...view.css,\r\n                  width: `${ele.width}px`,\r\n                  height: `${ele.height}px`,\r\n                  color: ele.fill,\r\n                  padding: `${ele.padding}px`,\r\n                  fontSize: `${ele.fontSize}px`,\r\n                  fontWeight: `${ele.fontWeight}`,\r\n                  maxLines: `${ele.maxLines}`,\r\n                  lineHeight: `${ele.lineHeight * 1.08 * ele.fontSize}px`,\r\n                  textStyle: `${ele.textStyle}`,\r\n                  textDecoration: `${ele.textDecoration === 'linethrough' ? 'line-through' : ele.textDecoration}`,\r\n                  fontFamily: `${ele.fontFamily}`,\r\n                  textAlign: `${ele.textAlign}`,\r\n                  shadow: `${ele.shadow}`\r\n                }\r\n              };\r\n            }\r\n          });\r\n        } else if (type === 'rect') {\r\n          delete css.color;\r\n          if (item2.strokeWidth === 0) {\r\n            delete css.borderWidth;\r\n            delete css.borderColor;\r\n          }\r\n          view = {\r\n            type,\r\n            css: {\r\n              ...css,\r\n              color: item2.fill\r\n            }\r\n          };\r\n        }\r\n        this.views.push(view);\r\n      });\r\n    });\r\n    this.finallObj = {\r\n      width: `${canvas_sprite.width}px`,\r\n      height: `${canvas_sprite.height}px`,\r\n      background: canvas_sprite.backgroundColor,\r\n      views: this.views\r\n    };\r\n    this.miniCode = `\r\n    export default class LastMayday {\r\n      palette() {\r\n        return (\r\n${json.plain(this.finallObj).replace(/px/g, 'px')}\r\n        );\r\n      }\r\n    }\r\n    `;\r\n    console.log('finallObj', json.plain(this.finallObj).replace(/px/g, 'rpx'));\r\n  }\r\n  copyCode() {\r\n    this.generateCode();\r\n    if (copy(this.miniCode)) {\r\n      message.success(`复制成功,请赶快去painter粘贴代码查看效果`, 2);\r\n    } else {\r\n      message.error(`复制失败,请重试或者去谷歌浏览器尝试`, 2);\r\n    }\r\n  }\r\n  viewCode() {\r\n    this.generateCode();\r\n    this.setState({\r\n      visibleCode: true\r\n    });\r\n  }\r\n  updateCanvasState() {\r\n    let that = this;\r\n    let canvas_sprite = this.canvas_sprite;\r\n    if (_config.undoStatus === false && _config.redoStatus === false) {\r\n      var jsonData = canvas_sprite.toJSON();\r\n      var canvasAsJson = JSON.stringify(jsonData);\r\n      if (_config.currentStateIndex < _config.canvasState.length - 1) {\r\n        var indexToBeInserted = _config.currentStateIndex + 1;\r\n        _config.canvasState[indexToBeInserted] = canvasAsJson;\r\n        var numberOfElementsToRetain = indexToBeInserted + 1;\r\n        _config.canvasState = _config.canvasState.splice(0, numberOfElementsToRetain);\r\n      } else {\r\n        _config.canvasState.push(canvasAsJson);\r\n      }\r\n      _config.currentStateIndex = _config.canvasState.length - 1;\r\n      if (_config.currentStateIndex === _config.canvasState.length - 1 && _config.currentStateIndex !== -1) {\r\n        that.setState({\r\n          redoButtonStatus: 'disabled'\r\n        });\r\n      }\r\n    }\r\n  }\r\n  handerUndo() {\r\n    let that = this;\r\n    let canvas_sprite = this.canvas_sprite;\r\n    if (_config.undoFinishedStatus) {\r\n      if (_config.currentStateIndex === -1) {\r\n        _config.undoStatus = false;\r\n      } else {\r\n        if (_config.canvasState.length >= 1) {\r\n          _config.undoFinishedStatus = 0;\r\n          if (_config.currentStateIndex !== 0) {\r\n            _config.undoStatus = true;\r\n            canvas_sprite.loadFromJSON(_config.canvasState[_config.currentStateIndex - 1], function() {\r\n              //var jsonData = JSON.parse(_config.canvasState[_config.currentStateIndex - 1]);\r\n              canvas_sprite.renderAll();\r\n              _config.undoStatus = false;\r\n              _config.currentStateIndex -= 1;\r\n              that.setState({\r\n                undoButtonStatus: ''\r\n              });\r\n              if (_config.currentStateIndex !== _config.canvasState.length - 1) {\r\n                that.setState({\r\n                  redoButtonStatus: ''\r\n                });\r\n              }\r\n              _config.undoFinishedStatus = 1;\r\n            });\r\n          } else if (_config.currentStateIndex === 0) {\r\n            canvas_sprite.clear();\r\n            _config.undoFinishedStatus = 1;\r\n            that.setState({\r\n              redoButtonStatus: '',\r\n              undoButtonStatus: 'disabled'\r\n            });\r\n            _config.currentStateIndex -= 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  handerRedo() {\r\n    let that = this;\r\n    let canvas_sprite = this.canvas_sprite;\r\n    if (_config.redoFinishedStatus) {\r\n      if (_config.currentStateIndex === _config.canvasState.length - 1 && _config.currentStateIndex !== -1) {\r\n        that.setState({\r\n          redoButtonStatus: 'disabled'\r\n        });\r\n      } else {\r\n        if (_config.canvasState.length > _config.currentStateIndex && _config.canvasState.length !== 0) {\r\n          _config.redoFinishedStatus = 0;\r\n          _config.redoStatus = true;\r\n          canvas_sprite.loadFromJSON(_config.canvasState[_config.currentStateIndex + 1], function() {\r\n            //var jsonData = JSON.parse(_config.canvasState[_config.currentStateIndex + 1]);\r\n            canvas_sprite.renderAll();\r\n            _config.redoStatus = false;\r\n            _config.currentStateIndex += 1;\r\n            if (_config.currentStateIndex !== -1) {\r\n              that.setState({\r\n                undoButtonStatus: ''\r\n              });\r\n            }\r\n            _config.redoFinishedStatus = 1;\r\n            if (_config.currentStateIndex === _config.canvasState.length - 1 && _config.currentStateIndex !== -1) {\r\n              that.setState({\r\n                redoButtonStatus: 'disabled'\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  handerEditObject() {\r\n    let canvas_sprite = this.canvas_sprite;\r\n    this.activeObject = canvas_sprite.getActiveObject();\r\n    this.showDrawer();\r\n    console.log('this.activeObject', this.activeObject);\r\n    this.setState({\r\n      activeObjectOptions: {\r\n        top: '',\r\n        left: '',\r\n        width: '',\r\n        height: '',\r\n        rotate: '',\r\n        borderRadius: 10,\r\n        borderWidth: 2,\r\n        borderColor: '#000000',\r\n        color: '',\r\n        background: '',\r\n        shadow: '',\r\n        text: '',\r\n        fontSize: '30',\r\n        fontWeight: 'bold',\r\n        maxLines: '',\r\n        lineHeight: '20',\r\n        padding: '10',\r\n        textDecoration: ['none', 'overline', 'underline', 'linethrough']\r\n      }\r\n    });\r\n  }\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const currentOptionArr = this.currentOptionArr;\r\n    const { /* visible,  */ visibleCode } = this.state;\r\n    return (\r\n      <div id='main'>\r\n        <div className='slide'>\r\n          <canvas id='merge' width='700' height='1000' />\r\n        </div>\r\n        <div className='main-container'>\r\n          <div className='box'>\r\n            <div className='btns'>\r\n              <div className='btn'>\r\n                <Button type='primary' onClick={this.handerUndo}>\r\n                  Undo\r\n                </Button>\r\n              </div>\r\n              <div className='btn'>\r\n                <Button type='primary' onClick={this.handerRedo}>\r\n                  Redo\r\n                </Button>\r\n              </div>\r\n              <div className='btn'>\r\n                <Button type='primary' onClick={this.handerEditObject}>\r\n                  编辑对象\r\n                </Button>\r\n              </div>\r\n              <div className='btn'>\r\n                <Button type='primary' onClick={this.copyCode}>\r\n                  复制代码\r\n                </Button>\r\n              </div>\r\n              <div className='btn'>\r\n                <Button type='primary' onClick={this.viewCode}>\r\n                  查看代码\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <div className='code' />\r\n          </div>\r\n          <div className='option'>\r\n            {optionArr.map((item, i) => {\r\n              if (i === 0) return null;\r\n              return (\r\n                <div key={i} className='option-li'>\r\n                  <div className='row'>\r\n                    <div className='h3'>{item.name} </div>\r\n                    <div className='btn'>\r\n                      <Button type='primary' onClick={this.addShape.bind(this, i)}>\r\n                        添加\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                  {Object.keys(item.css).map((item2, i2) => {\r\n                    return (\r\n                      <div className='row' key={i2}>\r\n                        <div className='h3'>{item2} </div>\r\n                        {!_.isArray(item.css[item2]) && (\r\n                          <Input\r\n                            defaultValue={item.css[item2]}\r\n                            onChange={event => {\r\n                              currentOptionArr[i].css[item2] = event.target.value;\r\n                            }}\r\n                          />\r\n                        )}\r\n                        {_.isArray(item.css[item2]) && (\r\n                          <Select\r\n                            defaultValue={item.css[item2][0]}\r\n                            style={{ width: 120 }}\r\n                            onChange={value => {\r\n                              currentOptionArr[i].css[item2] = value;\r\n                            }}\r\n                          >\r\n                            {item.css[item2].map((item3, i3) => {\r\n                              return (\r\n                                <Option value={item3} key={i3}>\r\n                                  {item3}\r\n                                </Option>\r\n                              );\r\n                            })}\r\n                          </Select>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        {/* <div className='edit-modal'>\r\n          <div>\r\n            <Button type='primary' onClick={this.showDrawer}>\r\n              <Icon type='plus' /> New account\r\n            </Button>\r\n            <Drawer title='编辑对象' width={400} onClose={this.onClose} visible={visible}>\r\n              {optionArr.map((item, i) => {\r\n                if (item.type === this.activeObject.type) {\r\n                  return (\r\n                    <div key={i} className='option-li'>\r\n                      <div className='row'>\r\n                        <div className='h3'>{item.name} </div>\r\n                        <div className='btn'>\r\n                          <Button type='primary' onClick={this.addShape.bind(this, i)}>\r\n                            添加\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                      {Object.keys(item.css).map((item2, i2) => {\r\n                        return (\r\n                          <div className='row' key={i2}>\r\n                            <div className='h3'>{item2} </div>\r\n                            {!_.isArray(item.css[item2]) && (\r\n                              <Input\r\n                                defaultValue={item.css[item2]}\r\n                                onChange={event => {\r\n                                  currentOptionArr[i].css[item2] = event.target.value;\r\n                                }}\r\n                              />\r\n                            )}\r\n                            {_.isArray(item.css[item2]) && (\r\n                              <Select\r\n                                defaultValue={item.css[item2][0]}\r\n                                style={{ width: 120 }}\r\n                                onChange={value => {\r\n                                  currentOptionArr[i].css[item2] = value;\r\n                                }}\r\n                              >\r\n                                {item.css[item2].map((item3, i3) => {\r\n                                  return (\r\n                                    <Option value={item3} key={i3}>\r\n                                      {item3}\r\n                                    </Option>\r\n                                  );\r\n                                })}\r\n                              </Select>\r\n                            )}\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  );\r\n                }\r\n              })}\r\n              <div\r\n                style={{\r\n                  position: 'absolute',\r\n                  left: 0,\r\n                  bottom: 0,\r\n                  width: '100%',\r\n                  borderTop: '1px solid #e9e9e9',\r\n                  padding: '10px 16px',\r\n                  background: '#fff',\r\n                  textAlign: 'right'\r\n                }}\r\n              >\r\n                <Button onClick={this.onClose} style={{ marginRight: 8 }}>\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={this.handleSubmit} type='primary'>\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </Drawer>\r\n          </div>\r\n        </div>\r\n       */}\r\n        <Modal\r\n          title='view code'\r\n          visible={visibleCode}\r\n          onCancel={() => {\r\n            this.setState({\r\n              visibleCode: false\r\n            });\r\n          }}\r\n          footer={[\r\n            <Button key='submit' type='primary' onClick={this.copyCode}>\r\n              复制代码\r\n            </Button>\r\n          ]}\r\n        >\r\n          <ReactMarkdown\r\n            source={`\\`\\`\\`\r\n${this.miniCode}\r\n          `}\r\n          />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App'; // 导入App组件\n/* import About from './components/About'; // 导入About组件\nimport Inbox from './components/Inbox'; // 导入Inbox组件 */\n\nReactDOM.render(\n  <div>\n    <App />\n  </div>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}